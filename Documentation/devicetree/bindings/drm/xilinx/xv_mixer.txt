Device Tree Bindings for Xilinx Video Mixer IP core

Required properties for Core IP Node:

    Required General Properties:
    - compatible: "xlnx,video_mixer-1.00a"

    - reg: MMIO base address and size of the Xilinx Video Mixer IP core address 
           space

    - interrupts-parent: Phandle for interrupt controller

    - interrupts: Interrupt number

    Required Mixer IP Core Properties
    - xlnx,bpc [number]: The data width per video component (8,10,12,16) Note:
	only 8 is currently supported

    - xlnx,num-layers [number]: Number of active overlay layers supported (1-7)
	(does not include logo layer but does include base layer)

    Optional Mixer IP Core Properties:
    - xlnx,logo-layer: Boolean indicating that logo layer is enabled

Layer Sub Node Properties:
    The device tree will need to include a sub node for each enabled layer
    in the IP core that is to be utilized by the driver.
    These layer nodes describe the base layer as well as each overlay layer 
    but not the logo layer (see Logo Layer Properties below).
    Each layer node should be named using "layer_#" format (e.g.
	layer_0 { }; layer_1 {}; ...)

    Required Properties:
    - xlnx,layer-id [number]: Mixer layer number; should correspond to layer
	number in the IP (e.g.  layer_1 should use xlnx,layer_id = <1).  Node
	Layer_0 is the only required node (exception: if xlnx,logo-layer
	property exists, then a logo {}; node must be present).  Layer_0 will
	be interpreted as the background layer and must use layer-id = <0>.

    - xlnx,vformat [string]: Expected layer input data format. 
	For streaming layers, the possible formats are: "rgb", "yuv444", 
		"yuv422", "yuv420"
	For memory layers, the possible formats are: "rgba8", "y_uv8", 
		"y_uv8_420", "yuyv8"

    - xlnx,layer-height [number]: Only required for layer_0 node (master layer).
	Indicates maximum vertical size of active screen display in pixels

    Optional Properties:
    - xlnx,layer-alpha: Indicates that this layer supports global alpha blending

    - xlnx,layer-scale: Indicates that this layer supports mixer scaling. Not
	applicable to layer_0 (i.e. master) node.

    - xlnx,layer-width [number]: Required if xlnx,layer-scale property exists
	for layer.  Indicates maximum number of columns (before scaling) for
	this layer (i.e. horizontal pixels)

    - xlnx,layer-streaming: Layer obtains data as video stream (if omitted,
	layer is presumed to be memory mapped)


Logo Layer Sub Node Properties:
    This node is only required if the core IP node contains the 
    'xlnx,logo-layer' property indicating the the core supports a logo layer.
    This subnode should be labled "logo" (e.g. logo { }; ).

    Required Properties:	
    - xlnx,layer-id [number]: This should be set to <8>.

    - xlnx,logo-height [number]: Maximum number of vertical pixels for the logo
	layer

    - xlnx,logo-width [number]: Maximum number of horizontal pixels for the logo
	layer


    Optional Properties:
    - xlnx,logo-transp: Logo support color key transparency feature

    - xlnx,logo-pixel-alpha: Logo supports per pixel alpha data (e.g. RGBA).


Additional Nodes Requiring Modificaton

There must exist a xilinx_drm node in the dts which much be updated as follows:

    Required Properties for xilinx_drm Node:

    - xlnx,mixer: Phandle reference to mixer IP node

    - xlnx,mixer-reset-gpios: Should include a phandle reference to
	the gpio controller with the proper gpio id and level (mixer reset
	default should be set to "low")


    Required Properties for each xilinx_drm plane# Node:

    Each plane node served by a mixer layer should include the
    the following property:

    - xlnx,mixer-layer: A phandle reference to the mixer layer node serving
	this plane. 



Example:

This sample is of a mixer IP core that has two overlay layers enabled in
addition to the logo layer.  One overlay 1 is a streaming video input layer
which is served by a dma IP core and overlay 2 is memory-based
(i.e. dma-driven) layer (no need for a separate dma IP core). Additionally, the 
mixer's reset line is on gpio #79. 

v_mix_0: v_mix@80040000 {
	compatible = "xlnx,v-mix-1.00a";
	interrupt-parent = <&gic>;
	interrupts = <0 90 4>;
	reg = <0x0 0x80040000 0x0 0x40000>;

	xlnx,bpc = <8>;
	xlnx,num-layers = <3>;
	xlnx,logo-layer;

	mixer_master_layer: layer_0 {
		xlnx,layer-id = <0>;
		xlnx,vformat = "rgb";
		xlnx,layer-width = <1920>;
		xlnx,layer-height = <1080>;
	};

	mixer_overlay_1: layer_1 {
		xlnx,layer-id = <1>;
		xlnx,vformat = "yuv422";
		xlnx,layer-streaming;
		xlnx,layer-alpha;
	};

	mixer_overlay_2: layer_2 {
		xlnx,layer-id = <2>;
		xlnx,vformat = "y_uv8_420";
		xlnx,layer-scale;
		xlnx,layer-width = <1920>;
	};

	mixer_logo: logo {
		xlnx,layer-id = <8>;
		xlnx,logo-width = <64>;	
		xlnx,logo-height = <64>;	
	};
};



xilinx_drm: xilinx_drm {
	compatible = "xlnx,drm";
	status = "okay";

	/* mixer IP specific additions to this node */
	xlnx,mixer = <&v_mix_0>;
	xlnx,mixer-reset-gpios = <&gpio 79 1>;

	xlnx,vtc = <&v_tc_0>;
	xlnx,encoder-slave = <&adv7511>;
	xlnx,connector-type = "HDMIA";
	planes {
		xlnx,pixel-format = "rgb888";
		plane0 {
			dmas = <&vdma_0 0>;
			dma-names = "dma0";
			xlnx,mixer-layer = <&mixer_master_layer>;
		};
		plane1 {
			dmas = <&vdma_1 0>;
			dma-names = "dma0";
			xlnx,mixer-layer = <&mixer_overlay_1>;
		};
		plane2 {
			xlnx,mixer-layer = <&mixer_overlay_2>;
		};
		plane3 {
			xlnx,mixer-layer = <&mixer_logo>;
		};
	};
};
